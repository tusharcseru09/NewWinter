## Server Port assign
server.port=8888

# ===============================
# = Thymeleaf Configuration
# ===============================
#spring.thymeleaf.cache=false
#spring.thymeleaf.enabled=true
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html


# ===============================
# = DATA SOURCE	PG
# ===============================
spring.datasource.driver-class-name=org.postgresql.Driver 
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Tushar570
# ===============================
# = DATA SOURCE	ORACLE
# ===============================
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@//192.168.71.28:1521/orcl
#spring.datasource.username=NEWWINTER
#spring.datasource.password=Tushar570


# ===============================
# = JPA / HIBERNATE PG
# ===============================
# ..Show or not log for each sql query
spring.jpa.show-sql=true

# ..Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# ..schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create

# ..Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect

# ..Fix Postgres JPA Error:Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# ===============================
# = JPA / HIBERNATE ORACLE
# ===============================
# ..Show or not log for each sql query
#spring.jpa.show-sql=true

# ..Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# ..schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create

# ..Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

# ..Fix Postgres JPA Error:Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext


# ===============================
# = Keep the connection alive if idle for a long time (needed in production)
# ===============================
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# ===============================
# = Naming strategy
# ===============================
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
